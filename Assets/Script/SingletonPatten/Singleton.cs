using UnityEngine;

//게임 매니저 구현을 위한 싱글톤 클래스 구현
public class Singleton<T> : MonoBehaviour where T : Component
{
    public bool dontDestroy = true;//dontDestroy 여부
    private static T _instance;//게임 매니저의 인스턴스

    //get 프로퍼티로 인스턴스 반환
    public static T Instance
    {
        get
        {
            if (_instance == null)
            {
                _instance = FindObjectOfType<T>();
                //지정한 타입의 오브젝트가 없을 시 새로운 GameObject를 생성하고 이름을 바꾼 후 지정되지 않은 유형의 컴포넌트를 추가
                if (_instance == null)
                {
                    GameObject obj = new GameObject();
                    obj.name = typeof(T).Name;
                    _instance = obj.AddComponent<T>();
                }
            }
            return _instance;
        }
    }

    public virtual void Awake()
    {
        //기존의 인스턴스가 없으면 인스턴스값 초기화
        if (_instance == null)
        {
            _instance = this as T;
            if(dontDestroy)
                DontDestroyOnLoad(gameObject);
        }
        else
        {
            DestroyImmediate(gameObject);
        }
    }
}